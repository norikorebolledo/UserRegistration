<h1>User Registration API</h1>

@*For signalr testing*@
@*<div class="container">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-2">Username</div>
        <div class="col-4"><input type="text" value="johndoe" id="usernameInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Password</div>
        <div class="col-4"><input type="text" value="somePassword" id="passwordInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Email</div>
        <div class="col-4"><input value="john.doe@mail.com" type="text" id="emailInput" /></div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <input type="button" id="register" value="Register" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-6" id="responseContainer">

    </div>
</div>
<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script src="~/lib/jsSHA-3.1.2/sha.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/accountHub").build();

    //Disable send button until connection is established
    document.getElementById("register").disabled = true;

    connection.start().then(function () {
        document.getElementById("register").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("registerResponse", function (data) {
        debugger
        document.getElementById("responseContainer").innerHTML = data;
    });

    document.getElementById("register").addEventListener("click", function (event) {
        debugger
        var username = document.getElementById("usernameInput").value;
        var password = document.getElementById("passwordInput").value;
        var email = document.getElementById("emailInput").value;

        var shaObj = new jsSHA("SHA-256", "TEXT");
        shaObj.setHMACKey(password, "TEXT");
        shaObj.update(username);
        var hashedPassword = shaObj.getHMAC("HEX");

        connection.invoke("register", {
            command: 'register',
            username: username,
            password: hashedPassword,
            email: email
        }).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

</script>*@
